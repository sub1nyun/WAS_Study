Ip (공인 ip)와 사설Ip

공인 -> 유일한 ip -> 공유기가 들고 있는 공인 ip -> 외부에서는 여기까지는 엑세스(접근)
사설 -> 공유기밑으로 있는 pc들 -> 사설ip(내부ip)

마을에 pc가 3대 있는데 공인 ip 2개를 공유하면 모두 사용이 가능

10.1.5.7 -> a,b
10.1.5.7 -> c

ex) 100 가구가 있다면 -> 80개 정도 있으면 돌려가면서 사용이 가능함
-> 내 ip가 고정이 될 수 없는 문제가 발생함
-> ip가 고정되지 못하면 -> 서버 운영이 불가능함

- DHCP 할당 -> 남는 ip를 부여해준다 -> 부족하다면 다른 ip로 변경 부여 -> ip가 지속적으로 변함 -> 유동 ip
-> 서버 운영이 불가능함!
=> 서버 운영을 하기 위해서는?

-> 고정ip가 필요함 -> 비용이 비쌈 

프리티어 -> 유동ip 제공
=> 고정 ip로 변경하면 됨(무료)
-> aws에서는 고정 ip를 부여 받는 것 (무료)
-> 언제 유료가 되는가? -> 고정 ip로 ec2 연결을 안 하고 부여만 받으면 -> 유료로 변경됨
-> 반대로 연결을 한다면 무료


1. 환경변수

$HOME -> 리눅스 환경에서 변수를 찾을때 사용하는 기호
- export LOVE="i love you" LOVE라는 환경변수를 등록하는 것
-> 단점으로 터미널을 재부팅 시 변수가 사라짐
-> 어떻게 하면 환경변수가 등록이 가능할까?

home의 위치에서 ll 찾아보면
- .bashrc 라는 파일이 존재함 -> 환경파일 등을 저장하는 리눅스의 설정 파일 -> 재부팅시에 적용됨
-> 재부팅하지 않고 적용하고 싶다면?
=> source ~ 명령어를 사용해서 바로 적용이 가능함

2. bashrc

export LOVE="i love you"
로그인시에만 적용
- source ./bashrc  -> 바로 적용

3. 환경변수 적용 범위
- .bashrc -> 어디에서나 사용이 가능
- 터미널에서 만들고 source 적용 -> 터미널이 종료되기 직전까지 사용이 가능함
- 쉘 스크립트(파일)로 변수를 만들고 다른 파일에서 실행하기 위해서는 
1. ./bashrc로 등록 (광역적으로 설정)
2. source로 터미널에서 적용 (터미널이 꺼지면 사용불가)
-> deploy.sh 파일이 실행되는 동안에만 변수를 사용할 수 있으면 됨
**** 파일에 source 라는 코드를 작성해주면 됨.

3. 서버 PID 찾아서 종료시키기

aws-v2-0,0.1.jar (형태로 실행파일이 만들어짐)

실행 -> aws-v2-0.0.1.jar 이름으로 실행됨

pgrep -f aws-v2-0.0.1.jar 실행 결과
/home/ubuntu/aws-v2/build/libs/aws-v2-0.0.1.jar
