### 재배포 프로세스 이해하기

1. 기존 서버를 중지 시켜야 함
 - spring-stop.sh 사용

2. aws-v1 폴더를 통째로 삭제
 ( 스크립트로 작성되면 재물어보는 부분 때문에 스크립트가 작동을 안 하게됨) (-rf 강제삭제를 사용)
 - rm -r /home/ubuntu/aws-v1

3. git clone 다운
 - git clone https://github.com/codingspecialist/aws-v1(주소)

4. gradlew 실행 권한 주기
 - cd /home/ubuntu/aws-v1
 - chmod u+x gradlew

5. 빌드하기
 - ./gradlew build
# 라이브러리 등이 다운받아지기 때문에 시간이 다소 소요될 수 있음
# 테스트 및 테스트가 통과도 되어야함

6. 빌드가 되고나면 jar 실행
 - cd /home/ubuntu/aws-v1/build/libs
 - nohup java -jar /home/ubuntu/aws-v1/build/libs/v1-0.0.1-SNAPSHOT.jar 1>log.out 2>err.out &
# nohup 으로 실행시킬 파일은 반드시 755 퍼미션을 가지고 있어야함
# no hang up의 약자로 -> 끊지말라는 의미 -> 세션과 연결을 종료해도 지금 실행시킨 프로그램을 종료하지 말라 -> 데몬 형태로 실행됨
# https://joonyon.tistory.com/entry/%EC%89%BD%EA%B2%8C-%EC%84%A4%EB%AA%85%ED%95%9C-nohup-%EA%B3%BC-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%82%AC%EC%9A%A9%EB%B2%95

7. cron으로 자동 재시작
 # deploy.sh 파일 생성
-------------------------------------------------------------------------------
 - echo "cron apply"
  crontab -l > crontab_new
  echo "* * * * */home/ubuntu/cron-restart/spring-restart.sh" 1>> crontab_new
  crontab crontab_new
  rm crontab_new

----------------------------------

# 2~7번까지 작업중 ->  서버가 멈춰있음 -> 재배포를 하게 되면 서버는  멈춤
 - 이 부분은 분명하게 해결해야 할 문제
 - 재배포시에 ec2를 새로 생성해서 거기에 재배포를 하고 ( apt update, JDK 설치, crontab 다시 등록 등 다시 필요해짐)
 - 배포가 잘 됐다면 기존 서버를 종료시키고




redeploy.sh 
# 재배포 스크립트를 작성 -> 위의 일련의 과정을 한 번에 스크립트로 작성
# 최초 -> 최초 배포 프로세스 
# 두번째 이상 -> 재배포 프로세스 

# 추상적 방법 : 쉬운 방법 ( AWS가 제공하는 좋은 서비스 ) 
