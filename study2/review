EC2 서버 대여
 - 클라우드의 컴퓨터를 임대하는 개념
 - AWS 홈페이지에 접속 후 리전을 변경해주기
 
IP 주소
 - 패킷으로 데이터가 이동 시 목적지가 충돌할 가능성이 다분
 - 전세계의 컴퓨터가 존재하는데 각자의 주소가 겹치면 x
 - 유일한 값이 필요 -> 정수 값으로 구분 -> 0~42억 9천개만 존재한다고 가정하기 -> IPv4방식
  - 2의 8승이 단위로 최대값 256을 갖음
  - 최대 ip) 255.255.255.255 최소는 0 
  - 퍼블릭 IP (공인) 이라 칭함
  - IPv5와 같이 홀수의 경우는 테스트 용도로 쓰임
  
포트번호
 - 데이터가 목적지에 도착했을때 어떤 프로그램인지 선택하는 것
 - 임의의 정수 값을 갖으며 논리번호로써 2byte가 기준 
 - 2byte => 2의 16승 = 65536 (1byte 가 8bit 니까)
 
패킷 스위칭
 - 데이터 통신을 하는 선이 하나이기 때문에
 - 동시 통신을 위해 라우터가 존재함
 - 패킷으로 데이터를 분해 -> header에 데이터에 대한 설명을 담음
 - 데이터와 목적지(IP), 프로그램 주소(포트번호)
 
SSH
 - 로컬 PC에서 AWS에 원격접속을 하려는데 방화벽이 존재함
 - 방화벽은 기본적으로 모든 포트를 차단하기 때문에 SSH의 포트번호 22번을 인바운드 규칙에서 설정해줘야함
 - 인바운드 -> 외부에서 내부로 들어오는 포트 
 - 22번 포트를 개방해줘야함
 - SSH(시큐어 쉘) Shell이란 명령어를 뜻함
 - 시큐어인 이유는 명령어(데이터)중에 민감함 데이터가 존재 하기때문에 암호화 처리를 해주는것
 
 RSA
  - Moba X 기준 use private key가 무엇인지
  - RSA는 만든 세사람 이름을 딴거라 별로 중요치 않음
  - 기존의 대칭키 방식의 경우 데이터를 열때, 잠글때 열쇠의 교환이 어려움
  - 키를 2개를 생성하는 방식을 차용함
  - A의 공개키로 데이터를 잠구면 A의 비밀키로만 열 수 있는 방식
  - ex) 자신의 공개키로 잠군다면 자신의 비밀키만으로 열 수 있으니 x
  - 데이터 암호화 -> 상대방의 공개키로 잠군다
  - 문제1. 데이터 폐기 후 수신자의 공개키로 보낸다면 데이터가 달라지게 됨
  - 데이터를 누가(송신자) 보냈는지 또한 확인
  = 형태 =
  - A비밀키(송신자)
  - B공개키(수신자)
  - 데이터
  
  - 프로토콜을 지정
  1. 전달 기준
   - 데이터 전송(암호화)시에 수신자의 공개키로 잠군다 -> 특정한 사용자만 받아야 하기 때문에 아무나 열어보지 못하게
   - 해당 데이터를 다시 송신자의 비밀키로 잠군다(전자 서명) -> 누가 보냈는가
   - 송신
   2. 받기 기준
    - 데이터를 송신자의 공개키로 열기 -> 공개키로 열린다는 것은 누가 보냈는지 확인하는 것 -> 전자 서명 검증
    - 키로 열리면 수신자의 개인키로 데이터 열기 -> 암호화 데이터 복호화
    
 ex) A는 K에게 1억을 송금
  - A는 -> A의 비밀키 -> 전자서명
  - A의 공개키로 열린다는 것은 위의 문장을 신뢰할 수 있다는 것
  .ssh(.이 붙으면 숨김파일) 에서 공개키가 존재함
  - authrorized_key
  - 클라이언트의 공개키(use private key)가 pc에 저장되어 있음
  - 비밀키를 갖고 접근해야함 -> 풀리는지 확인 -> 전자서명 -> 인증 절차 완료 -> 세션이 생성 됐기때문에 통신이 가능

   
  
 
