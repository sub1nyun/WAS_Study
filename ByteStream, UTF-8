통신의 단위는 영어 문자
영문 = 8bit = 1Byte (논리단위)

비트 단위로 광케이블을 통해 전류가 전송 -> 사람이 논리적으로 이해하기 위해서 8비트 단위로 끊어서 읽음
8비트마다 영어 단어 하나 ex) 'a'를 나타낼 수 있기 때문

영어는 8bit = 1Byte
2의8승은 => 256
알파벳은 대소문자롤 해도 256개 안쪽
한글은 최소 16bit 필요

통신은 ByteStream으로 이루어지며 ex) Stream이란 시냇물 -> 연속적으로 흐른다는 의미
문자를 하나씩 연속적으로 보냄 ex) 'a' 'p' 'p' 'l' 'e' 하나씩 8bit 

데이터를 받으면 CPU가 처리해야 하는데 -> RAM(메모리)에 데이터가 저장되어 있어야함
따라서 메모리에도 문자 단위인  8bit 단위로 데이터가 적재 
ex) 64비트 컴퓨터는 메모리로부터 한번에 64bit를 들고와서 처리함

ASCII코드
한 바이트는 한 문자를 나타낸다고 했다. 그걸 표로 정리해둔 것이 ASCII 코드이다. 8비트 이므로 총 127개의 문자를 표현할 수 있다. 이를 표로 정리하였으므로 완성형 문자셋이다. 

EUC-KR
ASCII코드로는 한글이나 한자 등 전세계의 언어를 표현할 수가 없다. 따라서 한글을 표현하기 위해 만들어진 완성형 문자셋이다. 하지만 단점으로는 뷁 처럼 미리 정의된 문자가 아니면 깨진다는 문제가 있다.

UTF-8
위의 문제를 해결하기 위해 나온 인코딩 방식이다. 1~4바이트의 가변 문자셋을 가지고 있다. 가변 문자셋이란 위처럼 정해진 완벽한 표를 가진 것이 아니라 문자에 따라 바이트의 수가 달라지는 것이다.
'a'는 1바이트로 표현되고 '가'는 3바이트로 표현된다. 뿐만 아니라 초성, 중성, 종성을 따로 구분할 수 있는 조합형이다. 그래서 뷁과 같이 표로 정의되지 않은 문자도 표현 가능하다.




